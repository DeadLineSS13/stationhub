name: .NET Core

on:
  push:
    branches:
      - "develop"
  pull_request:
    branches:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TEAM_ID: MY_TEAM_ID
      SIGNING_IDENTITY: thumbprint_of_certificate_added_to_keychain
    steps:
      - uses: actions/checkout@v1
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Test
        run: |
          dotnet test
      - name: Publish Windows
        run: |
          dotnet publish --configuration Release --runtime win-x64 --output ~/publish-win
      - name: Upload Build
        uses: actions/upload-artifact@v2
        with:
          name: StationHub-win-x64
          path: ~/publish-win
      - name: Publish Linux
        run: |
          dotnet publish --configuration Release --runtime linux-x64 --output ~/publish-linux
      - name: Upload Build
        uses: actions/upload-artifact@v2
        with:
          name: StationHub-linux-x64
          path: ~/publish-linux
      - name: Publish app
        run: dotnet publish -c Release -r osx-x64 -o $RUNNER_TEMP/StationHub.app/Contents/MacOS ./UnitystationLauncher/UnitystationLauncher.csproj
      - name: Notarise app
        run: |
          xcrun stapler staple "$RUNNER_TEMP/StationHub.app"
      - name: Upload Build
        uses: actions/upload-artifact@v2
        with:
          name: StationHub-osx-x64
          path: $RUNNER_TEMP/StationHub.app

  format:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Add dotnet-format problem matcher
        uses: xt0rted/dotnet-format-problem-matcher@v1

      - name: Restore dotnet tools
        uses: xt0rted/dotnet-tool-restore@v1

      - name: Run dotnet format
        uses: jfversluis/dotnet-format@v1.0.9
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          action: check
          only-changed-files: true
          workspace: "UnitystationLauncher.sln"
